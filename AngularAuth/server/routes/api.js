const express=require('express');
const router=express.Router();
const User=require('../models/user');
const mongoose =require('mongoose');
const jwt=require('jsonwebtoken');
const db="mongodb://hikansh:hikansh1998@ds231951.mlab.com:31951/angular_auth_app";

mongoose.connect(db,(err)=>{
    if(err){
        console.log(err);
        
    }
    else{
        console.log('Connected to mongoDB');
        
    }
})

function verifyToken(req,res,next){
    if(!req.headers.authorization){
        res.status(401).send('Unauthorized Access')
    }
    let token=req.headers.authorization.split(' ')[1]
    if(token === "null"){
        res.status(401).send('Unauthorized Access')
    }
    let payload=jwt.verify(token,'secret_key')
    if(!payload){
        res.status(401).send('Unauthorized Access')
    }
    req.userId=payload.subject
    next()
}

router.get('/',(req,res)=>{
    res.send('api route');
});

router.post('/register',(req,res)=>{
    let userData=req.body;
    let user=new User(userData);
    user.save((err,registeredUser)=>{
        if(err){
            console.log(err);
            
        }
        else{
            let payload={
                subject:registeredUser._id     //this is the key for each user
            }
            let token=jwt.sign(payload,'secret_key')    //signature is generated by sending the payload and any secretkey or msg
            res.status(200).send({token});
        }
    });
})

router.post('/login',(req,res)=>{
    let userData=req.body;
    User.findOne({ email:userData.email },(err,user)=>{
        if(err){
            console.log(err);
            
        }
        else{
            if(!user){
                res.status(401).send('Invalid Email');
                
            }
            else{
                if(userData.password!=user.password){
                    res.status(401).send('Invalid Password');
                }
                else{
                    let payload={
                        subject:user._id
                    }
                    let token=jwt.sign(payload,'secret_key')
                    res.status(200).send({token});
                }
            }
        }
    })
})

router.get('/events',(req,res)=>{
    let events=[
        {
            "_id":"1",
            "name":"Event 1",
            "description":"lorem ipsum"
        },
        {
            "_id":"2",
            "name":"Event 2",
            "description":"lorem ipsum"
        },
        {
            "_id":"3",
            "name":"Event 3",
            "description":"lorem ipsum"
        }
    ]
    res.json(events)
})

router.get('/specialevents',verifyToken,(req,res)=>{
    let events=[
        {
            "_id":"1",
            "name":"Event 1",
            "description":"lorem ipsum"
        },
        {
            "_id":"2",
            "name":"Event 2",
            "description":"lorem ipsum"
        },
        {
            "_id":"3",
            "name":"Event 3",
            "description":"lorem ipsum"
        }
    ]
    res.json(events)
})

module.exports=router;